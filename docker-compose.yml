services:
  postgres:
    image: postgres:latest
    env_file:
      - ./.env 
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network
  migrations:
    build:
      context: ./migrations
      dockerfile: ./Dockerfile
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: on-failure
  app:
    build:
      dockerfile: Dockerfile
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: on-failure
    ports:
      - "3000:3000"

volumes:
  pgdata:
    driver: local

networks:
  app-network:
    driver: bridge
